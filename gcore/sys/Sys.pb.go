// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.12.3
// source: Sys.proto

package sys

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Status int32

const (
	Status_SysOK           Status = 0
	Status_SysUnauthorized Status = 1
	Status_SysOffline      Status = 2
	Status_SysDisabled     Status = 3
	Status_SysRatelimited  Status = 4
)

// Enum value maps for Status.
var (
	Status_name = map[int32]string{
		0: "SysOK",
		1: "SysUnauthorized",
		2: "SysOffline",
		3: "SysDisabled",
		4: "SysRatelimited",
	}
	Status_value = map[string]int32{
		"SysOK":           0,
		"SysUnauthorized": 1,
		"SysOffline":      2,
		"SysDisabled":     3,
		"SysRatelimited":  4,
	}
)

func (x Status) Enum() *Status {
	p := new(Status)
	*p = x
	return p
}

func (x Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Status) Descriptor() protoreflect.EnumDescriptor {
	return file_Sys_proto_enumTypes[0].Descriptor()
}

func (Status) Type() protoreflect.EnumType {
	return &file_Sys_proto_enumTypes[0]
}

func (x Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Status.Descriptor instead.
func (Status) EnumDescriptor() ([]byte, []int) {
	return file_Sys_proto_rawDescGZIP(), []int{0}
}

type Tier int32

const (
	Tier_NormalPlayer Tier = 0
	Tier_Privileged   Tier = 1
	Tier_GameMaster   Tier = 2
	Tier_Admin        Tier = 3
)

// Enum value maps for Tier.
var (
	Tier_name = map[int32]string{
		0: "NormalPlayer",
		1: "Privileged",
		2: "GameMaster",
		3: "Admin",
	}
	Tier_value = map[string]int32{
		"NormalPlayer": 0,
		"Privileged":   1,
		"GameMaster":   2,
		"Admin":        3,
	}
)

func (x Tier) Enum() *Tier {
	p := new(Tier)
	*p = x
	return p
}

func (x Tier) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Tier) Descriptor() protoreflect.EnumDescriptor {
	return file_Sys_proto_enumTypes[1].Descriptor()
}

func (Tier) Type() protoreflect.EnumType {
	return &file_Sys_proto_enumTypes[1]
}

func (x Tier) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Tier.Descriptor instead.
func (Tier) EnumDescriptor() ([]byte, []int) {
	return file_Sys_proto_rawDescGZIP(), []int{1}
}

type StatusMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status Status `protobuf:"varint,1,opt,name=Status,proto3,enum=Status" json:"Status,omitempty"`
}

func (x *StatusMsg) Reset() {
	*x = StatusMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Sys_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusMsg) ProtoMessage() {}

func (x *StatusMsg) ProtoReflect() protoreflect.Message {
	mi := &file_Sys_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusMsg.ProtoReflect.Descriptor instead.
func (*StatusMsg) Descriptor() ([]byte, []int) {
	return file_Sys_proto_rawDescGZIP(), []int{0}
}

func (x *StatusMsg) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_SysOK
}

type VersionData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CoreVersion string `protobuf:"bytes,1,opt,name=CoreVersion,proto3" json:"CoreVersion,omitempty"`
}

func (x *VersionData) Reset() {
	*x = VersionData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Sys_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VersionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionData) ProtoMessage() {}

func (x *VersionData) ProtoReflect() protoreflect.Message {
	mi := &file_Sys_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionData.ProtoReflect.Descriptor instead.
func (*VersionData) Descriptor() ([]byte, []int) {
	return file_Sys_proto_rawDescGZIP(), []int{1}
}

func (x *VersionData) GetCoreVersion() string {
	if x != nil {
		return x.CoreVersion
	}
	return ""
}

type PingMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time uint64 `protobuf:"varint,1,opt,name=Time,proto3" json:"Time,omitempty"`
}

func (x *PingMsg) Reset() {
	*x = PingMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Sys_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingMsg) ProtoMessage() {}

func (x *PingMsg) ProtoReflect() protoreflect.Message {
	mi := &file_Sys_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingMsg.ProtoReflect.Descriptor instead.
func (*PingMsg) Descriptor() ([]byte, []int) {
	return file_Sys_proto_rawDescGZIP(), []int{2}
}

func (x *PingMsg) GetTime() uint64 {
	if x != nil {
		return x.Time
	}
	return 0
}

// Sent from worldserver to gcore server upon a player connection.
type VerifyWorldQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RealmID     uint64 `protobuf:"varint,1,opt,name=RealmID,proto3" json:"RealmID,omitempty"`
	Build       uint32 `protobuf:"varint,2,opt,name=Build,proto3" json:"Build,omitempty"`
	Account     string `protobuf:"bytes,3,opt,name=Account,proto3" json:"Account,omitempty"`
	IP          string `protobuf:"bytes,4,opt,name=IP,proto3" json:"IP,omitempty"`
	Digest      []byte `protobuf:"bytes,5,opt,name=Digest,proto3" json:"Digest,omitempty"`
	Seed        []byte `protobuf:"bytes,6,opt,name=Seed,proto3" json:"Seed,omitempty"`
	Salt        []byte `protobuf:"bytes,7,opt,name=Salt,proto3" json:"Salt,omitempty"`
	GameAccount string `protobuf:"bytes,8,opt,name=GameAccount,proto3" json:"GameAccount,omitempty"`
}

func (x *VerifyWorldQuery) Reset() {
	*x = VerifyWorldQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Sys_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyWorldQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyWorldQuery) ProtoMessage() {}

func (x *VerifyWorldQuery) ProtoReflect() protoreflect.Message {
	mi := &file_Sys_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyWorldQuery.ProtoReflect.Descriptor instead.
func (*VerifyWorldQuery) Descriptor() ([]byte, []int) {
	return file_Sys_proto_rawDescGZIP(), []int{3}
}

func (x *VerifyWorldQuery) GetRealmID() uint64 {
	if x != nil {
		return x.RealmID
	}
	return 0
}

func (x *VerifyWorldQuery) GetBuild() uint32 {
	if x != nil {
		return x.Build
	}
	return 0
}

func (x *VerifyWorldQuery) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *VerifyWorldQuery) GetIP() string {
	if x != nil {
		return x.IP
	}
	return ""
}

func (x *VerifyWorldQuery) GetDigest() []byte {
	if x != nil {
		return x.Digest
	}
	return nil
}

func (x *VerifyWorldQuery) GetSeed() []byte {
	if x != nil {
		return x.Seed
	}
	return nil
}

func (x *VerifyWorldQuery) GetSalt() []byte {
	if x != nil {
		return x.Salt
	}
	return nil
}

func (x *VerifyWorldQuery) GetGameAccount() string {
	if x != nil {
		return x.GameAccount
	}
	return ""
}

type VerifyWorldResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status      Status `protobuf:"varint,1,opt,name=Status,proto3,enum=Status" json:"Status,omitempty"`
	Tier        Tier   `protobuf:"varint,2,opt,name=Tier,proto3,enum=Tier" json:"Tier,omitempty"`
	SessionKey  []byte `protobuf:"bytes,3,opt,name=SessionKey,proto3" json:"SessionKey,omitempty"`
	Account     uint64 `protobuf:"varint,4,opt,name=Account,proto3" json:"Account,omitempty"`
	GameAccount uint64 `protobuf:"varint,5,opt,name=GameAccount,proto3" json:"GameAccount,omitempty"`
	Locale      uint32 `protobuf:"varint,6,opt,name=Locale,proto3" json:"Locale,omitempty"`
}

func (x *VerifyWorldResponse) Reset() {
	*x = VerifyWorldResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Sys_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyWorldResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyWorldResponse) ProtoMessage() {}

func (x *VerifyWorldResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Sys_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyWorldResponse.ProtoReflect.Descriptor instead.
func (*VerifyWorldResponse) Descriptor() ([]byte, []int) {
	return file_Sys_proto_rawDescGZIP(), []int{4}
}

func (x *VerifyWorldResponse) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_SysOK
}

func (x *VerifyWorldResponse) GetTier() Tier {
	if x != nil {
		return x.Tier
	}
	return Tier_NormalPlayer
}

func (x *VerifyWorldResponse) GetSessionKey() []byte {
	if x != nil {
		return x.SessionKey
	}
	return nil
}

func (x *VerifyWorldResponse) GetAccount() uint64 {
	if x != nil {
		return x.Account
	}
	return 0
}

func (x *VerifyWorldResponse) GetGameAccount() uint64 {
	if x != nil {
		return x.GameAccount
	}
	return 0
}

func (x *VerifyWorldResponse) GetLocale() uint32 {
	if x != nil {
		return x.Locale
	}
	return 0
}

type AnnounceRealmMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RealmID          uint64 `protobuf:"varint,1,opt,name=RealmID,proto3" json:"RealmID,omitempty"`
	Type             uint32 `protobuf:"varint,3,opt,name=Type,proto3" json:"Type,omitempty"`
	RealmName        string `protobuf:"bytes,4,opt,name=RealmName,proto3" json:"RealmName,omitempty"`
	RealmDescription string `protobuf:"bytes,5,opt,name=RealmDescription,proto3" json:"RealmDescription,omitempty"`
	Build            uint32 `protobuf:"varint,6,opt,name=Build,proto3" json:"Build,omitempty"`
	Address          string `protobuf:"bytes,7,opt,name=Address,proto3" json:"Address,omitempty"`
	ActivePlayers    uint32 `protobuf:"varint,8,opt,name=ActivePlayers,proto3" json:"ActivePlayers,omitempty"`
}

func (x *AnnounceRealmMsg) Reset() {
	*x = AnnounceRealmMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Sys_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnnounceRealmMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnnounceRealmMsg) ProtoMessage() {}

func (x *AnnounceRealmMsg) ProtoReflect() protoreflect.Message {
	mi := &file_Sys_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnnounceRealmMsg.ProtoReflect.Descriptor instead.
func (*AnnounceRealmMsg) Descriptor() ([]byte, []int) {
	return file_Sys_proto_rawDescGZIP(), []int{5}
}

func (x *AnnounceRealmMsg) GetRealmID() uint64 {
	if x != nil {
		return x.RealmID
	}
	return 0
}

func (x *AnnounceRealmMsg) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *AnnounceRealmMsg) GetRealmName() string {
	if x != nil {
		return x.RealmName
	}
	return ""
}

func (x *AnnounceRealmMsg) GetRealmDescription() string {
	if x != nil {
		return x.RealmDescription
	}
	return ""
}

func (x *AnnounceRealmMsg) GetBuild() uint32 {
	if x != nil {
		return x.Build
	}
	return 0
}

func (x *AnnounceRealmMsg) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *AnnounceRealmMsg) GetActivePlayers() uint32 {
	if x != nil {
		return x.ActivePlayers
	}
	return 0
}

type Credentials struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account  string `protobuf:"bytes,1,opt,name=Account,proto3" json:"Account,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=Password,proto3" json:"Password,omitempty"`
}

func (x *Credentials) Reset() {
	*x = Credentials{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Sys_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Credentials) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Credentials) ProtoMessage() {}

func (x *Credentials) ProtoReflect() protoreflect.Message {
	mi := &file_Sys_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Credentials.ProtoReflect.Descriptor instead.
func (*Credentials) Descriptor() ([]byte, []int) {
	return file_Sys_proto_rawDescGZIP(), []int{6}
}

func (x *Credentials) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *Credentials) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type CredentialsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status Status `protobuf:"varint,1,opt,name=Status,proto3,enum=Status" json:"Status,omitempty"`
	Tier   Tier   `protobuf:"varint,2,opt,name=Tier,proto3,enum=Tier" json:"Tier,omitempty"`
}

func (x *CredentialsResponse) Reset() {
	*x = CredentialsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Sys_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CredentialsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CredentialsResponse) ProtoMessage() {}

func (x *CredentialsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Sys_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CredentialsResponse.ProtoReflect.Descriptor instead.
func (*CredentialsResponse) Descriptor() ([]byte, []int) {
	return file_Sys_proto_rawDescGZIP(), []int{7}
}

func (x *CredentialsResponse) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_SysOK
}

func (x *CredentialsResponse) GetTier() Tier {
	if x != nil {
		return x.Tier
	}
	return Tier_NormalPlayer
}

type AddRealmRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Credentials      *Credentials `protobuf:"bytes,1,opt,name=Credentials,proto3" json:"Credentials,omitempty"`
	RealmID          uint64       `protobuf:"varint,2,opt,name=RealmID,proto3" json:"RealmID,omitempty"`
	RealmFingerprint string       `protobuf:"bytes,3,opt,name=RealmFingerprint,proto3" json:"RealmFingerprint,omitempty"`
}

func (x *AddRealmRequest) Reset() {
	*x = AddRealmRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Sys_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddRealmRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRealmRequest) ProtoMessage() {}

func (x *AddRealmRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Sys_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRealmRequest.ProtoReflect.Descriptor instead.
func (*AddRealmRequest) Descriptor() ([]byte, []int) {
	return file_Sys_proto_rawDescGZIP(), []int{8}
}

func (x *AddRealmRequest) GetCredentials() *Credentials {
	if x != nil {
		return x.Credentials
	}
	return nil
}

func (x *AddRealmRequest) GetRealmID() uint64 {
	if x != nil {
		return x.RealmID
	}
	return 0
}

func (x *AddRealmRequest) GetRealmFingerprint() string {
	if x != nil {
		return x.RealmFingerprint
	}
	return ""
}

type Info struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Info) Reset() {
	*x = Info{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Sys_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Info) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Info) ProtoMessage() {}

func (x *Info) ProtoReflect() protoreflect.Message {
	mi := &file_Sys_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Info.ProtoReflect.Descriptor instead.
func (*Info) Descriptor() ([]byte, []int) {
	return file_Sys_proto_rawDescGZIP(), []int{9}
}

var File_Sys_proto protoreflect.FileDescriptor

var file_Sys_proto_rawDesc = []byte{
	0x0a, 0x09, 0x53, 0x79, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70,
	0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2c, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x4d, 0x73, 0x67, 0x12, 0x1f, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x07, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x2f, 0x0a, 0x0b, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x6f, 0x72, 0x65, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x43, 0x6f, 0x72, 0x65,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x1d, 0x0a, 0x07, 0x50, 0x69, 0x6e, 0x67, 0x4d,
	0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xce, 0x01, 0x0a, 0x10, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x79, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x52,
	0x65, 0x61, 0x6c, 0x6d, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x52, 0x65,
	0x61, 0x6c, 0x6d, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x50, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x49, 0x50, 0x12, 0x16, 0x0a, 0x06, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x53, 0x65, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x53, 0x65, 0x65,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x61, 0x6c, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x04, 0x53, 0x61, 0x6c, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x47, 0x61, 0x6d, 0x65,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xc5, 0x01, 0x0a, 0x13, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x79, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1f, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x07, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x19, 0x0a, 0x04, 0x54, 0x69, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x05,
	0x2e, 0x54, 0x69, 0x65, 0x72, 0x52, 0x04, 0x54, 0x69, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0a, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x47, 0x61, 0x6d, 0x65,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x4c, 0x6f, 0x63, 0x61, 0x6c,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x22,
	0xe0, 0x01, 0x0a, 0x10, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x61, 0x6c,
	0x6d, 0x4d, 0x73, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x52, 0x65, 0x61, 0x6c, 0x6d, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x52, 0x65, 0x61, 0x6c, 0x6d, 0x49, 0x44, 0x12, 0x12,
	0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x61, 0x6c, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x52, 0x65, 0x61, 0x6c, 0x6d, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x2a, 0x0a, 0x10, 0x52, 0x65, 0x61, 0x6c, 0x6d, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x52, 0x65, 0x61, 0x6c,
	0x6d, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05,
	0x42, 0x75, 0x69, 0x6c, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x42, 0x75, 0x69,
	0x6c, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x24, 0x0a, 0x0d,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0d, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x73, 0x22, 0x43, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x51, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f,
	0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x07,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x19, 0x0a, 0x04, 0x54, 0x69, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x05, 0x2e,
	0x54, 0x69, 0x65, 0x72, 0x52, 0x04, 0x54, 0x69, 0x65, 0x72, 0x22, 0x87, 0x01, 0x0a, 0x0f, 0x41,
	0x64, 0x64, 0x52, 0x65, 0x61, 0x6c, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e,
	0x0a, 0x0b, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x73, 0x52, 0x0b, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x52, 0x65, 0x61, 0x6c, 0x6d, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x07, 0x52, 0x65, 0x61, 0x6c, 0x6d, 0x49, 0x44, 0x12, 0x2a, 0x0a, 0x10, 0x52, 0x65, 0x61, 0x6c,
	0x6d, 0x46, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x52, 0x65, 0x61, 0x6c, 0x6d, 0x46, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70,
	0x72, 0x69, 0x6e, 0x74, 0x22, 0x06, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x2a, 0x5d, 0x0a, 0x06,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x09, 0x0a, 0x05, 0x53, 0x79, 0x73, 0x4f, 0x4b, 0x10,
	0x00, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x79, 0x73, 0x55, 0x6e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x69, 0x7a, 0x65, 0x64, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x79, 0x73, 0x4f, 0x66, 0x66,
	0x6c, 0x69, 0x6e, 0x65, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x79, 0x73, 0x44, 0x69, 0x73,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x10, 0x03, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x79, 0x73, 0x52, 0x61,
	0x74, 0x65, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x64, 0x10, 0x04, 0x2a, 0x43, 0x0a, 0x04, 0x54,
	0x69, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x0c, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x50, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65,
	0x67, 0x65, 0x64, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x10, 0x03,
	0x32, 0xa0, 0x03, 0x0a, 0x0b, 0x41, 0x75, 0x74, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x38, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x0c, 0x2e, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x22, 0x00, 0x12, 0x1c, 0x0a, 0x04, 0x50, 0x69,
	0x6e, 0x67, 0x12, 0x08, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x4d, 0x73, 0x67, 0x1a, 0x08, 0x2e, 0x50,
	0x69, 0x6e, 0x67, 0x4d, 0x73, 0x67, 0x22, 0x00, 0x12, 0x30, 0x0a, 0x0d, 0x41, 0x6e, 0x6e, 0x6f,
	0x75, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x61, 0x6c, 0x6d, 0x12, 0x11, 0x2e, 0x41, 0x6e, 0x6e, 0x6f,
	0x75, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x61, 0x6c, 0x6d, 0x4d, 0x73, 0x67, 0x1a, 0x0a, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x73, 0x67, 0x22, 0x00, 0x12, 0x38, 0x0a, 0x0b, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x79, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x12, 0x11, 0x2e, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x79, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x14, 0x2e, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x79, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x21, 0x0a, 0x0a, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x05, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x0a, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x4d, 0x73, 0x67, 0x22, 0x00, 0x12, 0x38, 0x0a, 0x10, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x12, 0x0c, 0x2e, 0x43, 0x72,
	0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x1a, 0x14, 0x2e, 0x43, 0x72, 0x65, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x3c, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x78, 0x74, 0x52, 0x65, 0x61, 0x6c,
	0x6d, 0x49, 0x44, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x10, 0x2e, 0x41, 0x64,
	0x64, 0x52, 0x65, 0x61, 0x6c, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x00, 0x12,
	0x32, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x52, 0x65, 0x61, 0x6c, 0x6d, 0x54, 0x6f, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x10, 0x2e, 0x41, 0x64, 0x64, 0x52, 0x65, 0x61, 0x6c, 0x6d, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0a, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x73,
	0x67, 0x22, 0x00, 0x32, 0x0f, 0x0a, 0x0d, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x4c, 0x69, 0x73, 0x74,
	0x65, 0x6e, 0x65, 0x72, 0x42, 0x08, 0x5a, 0x06, 0x2e, 0x2e, 0x2f, 0x73, 0x79, 0x73, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_Sys_proto_rawDescOnce sync.Once
	file_Sys_proto_rawDescData = file_Sys_proto_rawDesc
)

func file_Sys_proto_rawDescGZIP() []byte {
	file_Sys_proto_rawDescOnce.Do(func() {
		file_Sys_proto_rawDescData = protoimpl.X.CompressGZIP(file_Sys_proto_rawDescData)
	})
	return file_Sys_proto_rawDescData
}

var file_Sys_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_Sys_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_Sys_proto_goTypes = []interface{}{
	(Status)(0),                 // 0: Status
	(Tier)(0),                   // 1: Tier
	(*StatusMsg)(nil),           // 2: StatusMsg
	(*VersionData)(nil),         // 3: VersionData
	(*PingMsg)(nil),             // 4: PingMsg
	(*VerifyWorldQuery)(nil),    // 5: VerifyWorldQuery
	(*VerifyWorldResponse)(nil), // 6: VerifyWorldResponse
	(*AnnounceRealmMsg)(nil),    // 7: AnnounceRealmMsg
	(*Credentials)(nil),         // 8: Credentials
	(*CredentialsResponse)(nil), // 9: CredentialsResponse
	(*AddRealmRequest)(nil),     // 10: AddRealmRequest
	(*Info)(nil),                // 11: Info
	(*empty.Empty)(nil),         // 12: google.protobuf.Empty
}
var file_Sys_proto_depIdxs = []int32{
	0,  // 0: StatusMsg.Status:type_name -> Status
	0,  // 1: VerifyWorldResponse.Status:type_name -> Status
	1,  // 2: VerifyWorldResponse.Tier:type_name -> Tier
	0,  // 3: CredentialsResponse.Status:type_name -> Status
	1,  // 4: CredentialsResponse.Tier:type_name -> Tier
	8,  // 5: AddRealmRequest.Credentials:type_name -> Credentials
	12, // 6: AuthService.GetVersionData:input_type -> google.protobuf.Empty
	4,  // 7: AuthService.Ping:input_type -> PingMsg
	7,  // 8: AuthService.AnnounceRealm:input_type -> AnnounceRealmMsg
	5,  // 9: AuthService.VerifyWorld:input_type -> VerifyWorldQuery
	11, // 10: AuthService.ReportInfo:input_type -> Info
	8,  // 11: AuthService.CheckCredentials:input_type -> Credentials
	12, // 12: AuthService.GetNextRealmID:input_type -> google.protobuf.Empty
	10, // 13: AuthService.AddRealmToConfig:input_type -> AddRealmRequest
	3,  // 14: AuthService.GetVersionData:output_type -> VersionData
	4,  // 15: AuthService.Ping:output_type -> PingMsg
	2,  // 16: AuthService.AnnounceRealm:output_type -> StatusMsg
	6,  // 17: AuthService.VerifyWorld:output_type -> VerifyWorldResponse
	2,  // 18: AuthService.ReportInfo:output_type -> StatusMsg
	9,  // 19: AuthService.CheckCredentials:output_type -> CredentialsResponse
	10, // 20: AuthService.GetNextRealmID:output_type -> AddRealmRequest
	2,  // 21: AuthService.AddRealmToConfig:output_type -> StatusMsg
	14, // [14:22] is the sub-list for method output_type
	6,  // [6:14] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_Sys_proto_init() }
func file_Sys_proto_init() {
	if File_Sys_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_Sys_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Sys_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VersionData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Sys_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Sys_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyWorldQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Sys_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyWorldResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Sys_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnnounceRealmMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Sys_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Credentials); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Sys_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CredentialsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Sys_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddRealmRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Sys_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Info); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_Sys_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_Sys_proto_goTypes,
		DependencyIndexes: file_Sys_proto_depIdxs,
		EnumInfos:         file_Sys_proto_enumTypes,
		MessageInfos:      file_Sys_proto_msgTypes,
	}.Build()
	File_Sys_proto = out.File
	file_Sys_proto_rawDesc = nil
	file_Sys_proto_goTypes = nil
	file_Sys_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// AuthServiceClient is the client API for AuthService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AuthServiceClient interface {
	GetVersionData(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*VersionData, error)
	Ping(ctx context.Context, in *PingMsg, opts ...grpc.CallOption) (*PingMsg, error)
	AnnounceRealm(ctx context.Context, in *AnnounceRealmMsg, opts ...grpc.CallOption) (*StatusMsg, error)
	VerifyWorld(ctx context.Context, in *VerifyWorldQuery, opts ...grpc.CallOption) (*VerifyWorldResponse, error)
	ReportInfo(ctx context.Context, in *Info, opts ...grpc.CallOption) (*StatusMsg, error)
	CheckCredentials(ctx context.Context, in *Credentials, opts ...grpc.CallOption) (*CredentialsResponse, error)
	GetNextRealmID(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*AddRealmRequest, error)
	AddRealmToConfig(ctx context.Context, in *AddRealmRequest, opts ...grpc.CallOption) (*StatusMsg, error)
}

type authServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewAuthServiceClient(cc grpc.ClientConnInterface) AuthServiceClient {
	return &authServiceClient{cc}
}

func (c *authServiceClient) GetVersionData(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*VersionData, error) {
	out := new(VersionData)
	err := c.cc.Invoke(ctx, "/AuthService/GetVersionData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authServiceClient) Ping(ctx context.Context, in *PingMsg, opts ...grpc.CallOption) (*PingMsg, error) {
	out := new(PingMsg)
	err := c.cc.Invoke(ctx, "/AuthService/Ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authServiceClient) AnnounceRealm(ctx context.Context, in *AnnounceRealmMsg, opts ...grpc.CallOption) (*StatusMsg, error) {
	out := new(StatusMsg)
	err := c.cc.Invoke(ctx, "/AuthService/AnnounceRealm", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authServiceClient) VerifyWorld(ctx context.Context, in *VerifyWorldQuery, opts ...grpc.CallOption) (*VerifyWorldResponse, error) {
	out := new(VerifyWorldResponse)
	err := c.cc.Invoke(ctx, "/AuthService/VerifyWorld", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authServiceClient) ReportInfo(ctx context.Context, in *Info, opts ...grpc.CallOption) (*StatusMsg, error) {
	out := new(StatusMsg)
	err := c.cc.Invoke(ctx, "/AuthService/ReportInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authServiceClient) CheckCredentials(ctx context.Context, in *Credentials, opts ...grpc.CallOption) (*CredentialsResponse, error) {
	out := new(CredentialsResponse)
	err := c.cc.Invoke(ctx, "/AuthService/CheckCredentials", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authServiceClient) GetNextRealmID(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*AddRealmRequest, error) {
	out := new(AddRealmRequest)
	err := c.cc.Invoke(ctx, "/AuthService/GetNextRealmID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authServiceClient) AddRealmToConfig(ctx context.Context, in *AddRealmRequest, opts ...grpc.CallOption) (*StatusMsg, error) {
	out := new(StatusMsg)
	err := c.cc.Invoke(ctx, "/AuthService/AddRealmToConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AuthServiceServer is the server API for AuthService service.
type AuthServiceServer interface {
	GetVersionData(context.Context, *empty.Empty) (*VersionData, error)
	Ping(context.Context, *PingMsg) (*PingMsg, error)
	AnnounceRealm(context.Context, *AnnounceRealmMsg) (*StatusMsg, error)
	VerifyWorld(context.Context, *VerifyWorldQuery) (*VerifyWorldResponse, error)
	ReportInfo(context.Context, *Info) (*StatusMsg, error)
	CheckCredentials(context.Context, *Credentials) (*CredentialsResponse, error)
	GetNextRealmID(context.Context, *empty.Empty) (*AddRealmRequest, error)
	AddRealmToConfig(context.Context, *AddRealmRequest) (*StatusMsg, error)
}

// UnimplementedAuthServiceServer can be embedded to have forward compatible implementations.
type UnimplementedAuthServiceServer struct {
}

func (*UnimplementedAuthServiceServer) GetVersionData(context.Context, *empty.Empty) (*VersionData, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetVersionData not implemented")
}
func (*UnimplementedAuthServiceServer) Ping(context.Context, *PingMsg) (*PingMsg, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Ping not implemented")
}
func (*UnimplementedAuthServiceServer) AnnounceRealm(context.Context, *AnnounceRealmMsg) (*StatusMsg, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AnnounceRealm not implemented")
}
func (*UnimplementedAuthServiceServer) VerifyWorld(context.Context, *VerifyWorldQuery) (*VerifyWorldResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method VerifyWorld not implemented")
}
func (*UnimplementedAuthServiceServer) ReportInfo(context.Context, *Info) (*StatusMsg, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReportInfo not implemented")
}
func (*UnimplementedAuthServiceServer) CheckCredentials(context.Context, *Credentials) (*CredentialsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckCredentials not implemented")
}
func (*UnimplementedAuthServiceServer) GetNextRealmID(context.Context, *empty.Empty) (*AddRealmRequest, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetNextRealmID not implemented")
}
func (*UnimplementedAuthServiceServer) AddRealmToConfig(context.Context, *AddRealmRequest) (*StatusMsg, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddRealmToConfig not implemented")
}

func RegisterAuthServiceServer(s *grpc.Server, srv AuthServiceServer) {
	s.RegisterService(&_AuthService_serviceDesc, srv)
}

func _AuthService_GetVersionData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServiceServer).GetVersionData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/AuthService/GetVersionData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServiceServer).GetVersionData(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthService_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PingMsg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServiceServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/AuthService/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServiceServer).Ping(ctx, req.(*PingMsg))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthService_AnnounceRealm_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AnnounceRealmMsg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServiceServer).AnnounceRealm(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/AuthService/AnnounceRealm",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServiceServer).AnnounceRealm(ctx, req.(*AnnounceRealmMsg))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthService_VerifyWorld_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VerifyWorldQuery)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServiceServer).VerifyWorld(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/AuthService/VerifyWorld",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServiceServer).VerifyWorld(ctx, req.(*VerifyWorldQuery))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthService_ReportInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Info)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServiceServer).ReportInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/AuthService/ReportInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServiceServer).ReportInfo(ctx, req.(*Info))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthService_CheckCredentials_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Credentials)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServiceServer).CheckCredentials(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/AuthService/CheckCredentials",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServiceServer).CheckCredentials(ctx, req.(*Credentials))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthService_GetNextRealmID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServiceServer).GetNextRealmID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/AuthService/GetNextRealmID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServiceServer).GetNextRealmID(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthService_AddRealmToConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddRealmRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServiceServer).AddRealmToConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/AuthService/AddRealmToConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServiceServer).AddRealmToConfig(ctx, req.(*AddRealmRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AuthService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "AuthService",
	HandlerType: (*AuthServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetVersionData",
			Handler:    _AuthService_GetVersionData_Handler,
		},
		{
			MethodName: "Ping",
			Handler:    _AuthService_Ping_Handler,
		},
		{
			MethodName: "AnnounceRealm",
			Handler:    _AuthService_AnnounceRealm_Handler,
		},
		{
			MethodName: "VerifyWorld",
			Handler:    _AuthService_VerifyWorld_Handler,
		},
		{
			MethodName: "ReportInfo",
			Handler:    _AuthService_ReportInfo_Handler,
		},
		{
			MethodName: "CheckCredentials",
			Handler:    _AuthService_CheckCredentials_Handler,
		},
		{
			MethodName: "GetNextRealmID",
			Handler:    _AuthService_GetNextRealmID_Handler,
		},
		{
			MethodName: "AddRealmToConfig",
			Handler:    _AuthService_AddRealmToConfig_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "Sys.proto",
}

// WorldListenerClient is the client API for WorldListener service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WorldListenerClient interface {
}

type worldListenerClient struct {
	cc grpc.ClientConnInterface
}

func NewWorldListenerClient(cc grpc.ClientConnInterface) WorldListenerClient {
	return &worldListenerClient{cc}
}

// WorldListenerServer is the server API for WorldListener service.
type WorldListenerServer interface {
}

// UnimplementedWorldListenerServer can be embedded to have forward compatible implementations.
type UnimplementedWorldListenerServer struct {
}

func RegisterWorldListenerServer(s *grpc.Server, srv WorldListenerServer) {
	s.RegisterService(&_WorldListener_serviceDesc, srv)
}

var _WorldListener_serviceDesc = grpc.ServiceDesc{
	ServiceName: "WorldListener",
	HandlerType: (*WorldListenerServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams:     []grpc.StreamDesc{},
	Metadata:    "Sys.proto",
}
