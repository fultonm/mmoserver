syntax = "proto3";

import "google/protobuf/empty.proto";

option go_package = "../sys";

enum Status {
    SysOK = 0;
    SysUnauthorized = 1;
    SysOffline = 2;
    SysDisabled = 3;
    SysRatelimited = 4;
}

enum Tier {
	NormalPlayer = 0;
	Privileged = 1;
	GameMaster = 2;
	Admin = 3;
}

message StatusMsg {
    Status Status = 1;
}

message VersionData {
    string CoreVersion = 1;
}

message PingMsg {
    uint64 Time = 1;
}

// Sent from worldserver to gcore server upon a player connection.
message VerifyWorldQuery {
    uint64 RealmID = 1;
    uint32 Build = 2;
    string Account = 3;
    string IP = 4;
    bytes  Digest = 5;
    bytes  Seed = 6;
    bytes  Salt = 7;
    string GameAccount = 8;
}

message VerifyWorldResponse {
    Status Status = 1;
    Tier   Tier = 2;
    bytes  SessionKey = 3;  
    uint64 Account = 4;
    uint64 GameAccount = 5;
    uint32 Locale = 6;
}

message AnnounceRealmMsg {
    uint64 RealmID = 1;
    uint32 Type = 2;
    string RealmName = 3;
    string RealmDescription = 4;
    uint32 Build = 5;
    string Address = 6;
    uint32 ActivePlayers = 7;
    uint32 TotalPlayers = 8;
    uint32 Timezone = 9;
}

message Credentials {
    string Account = 1;
    string Password = 2;
}

message CredentialsResponse {
    Status Status = 1;
    Tier   Tier = 2;
}

message AddRealmRequest {
    Credentials Credentials = 1;
    uint64 RealmID = 2;
    string RealmFingerprint = 3;
}

message Info {

}

service AuthService {
    rpc GetVersionData(google.protobuf.Empty) returns (VersionData) {}
    rpc Ping(PingMsg) returns (PingMsg) {}
    rpc AnnounceRealm(AnnounceRealmMsg) returns (StatusMsg) {}
    rpc VerifyWorld(VerifyWorldQuery) returns (VerifyWorldResponse) {}
    rpc ReportInfo(Info) returns (StatusMsg) {}
    rpc CheckCredentials(Credentials) returns (CredentialsResponse) {}
    rpc GetNextRealmID(google.protobuf.Empty) returns (AddRealmRequest) {}
    rpc AddRealmToConfig(AddRealmRequest) returns (StatusMsg) {}
}

service WorldListener {
    
}